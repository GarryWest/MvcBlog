@model MvcBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
    ViewData["firstOne"] = "true";
}

<div class="container pt-5 overflow-auto" style="height:480px">
    <div class="row-cols-12">
        @if (!string.IsNullOrEmpty(Model.Image)){
            @Html.Raw($"<img class='img-fluid' src='{@Url.Content("~/Images/" + Model.Image)}' height='240px' width='480px' >");
        }
    </div>
    <div class="row">
        <h4>@Html.DisplayFor(model => model.Title)</h4>
    </div>
    <hr />
    <div class="row">
        <div class="col-2">
            @Html.DisplayFor(model => model.Author)
        </div>
        <div class="col-2">
            @Html.DisplayFor(model => model.CreateDate)
        </div>
    </div>
    <div class="row-cols-12">
        @Html.Raw(Model.Content)
    </div>
    <div class="row">
        <div class="col-12">
            <label>Tags:</label>
            @foreach (BlogPostTag tag in Model.Tags)
            {
                <span style="display:inline">
                    @if ((string?)ViewData["firstOne"] != "true")
                    {
                        <span style="display:inline; padding-right:1px">,</span>
                    }
                    @* @Html.DisplayFor(tagItem => tag.TagName) *@
                    <a asp-action="Index" asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       asp-route-currentTag="@tag.TagName">@tag.TagName</a>
                </span>
                ViewData["firstOne"] = "false";
            }
        </div>
    </div>
    <hr />
    <div>
        @{
            if (User.HasClaim("IsAdmin", bool.TrueString))
            {
                <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
            }
        }

        <a asp-action="Index">Back to List</a>
    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const images = document.querySelectorAll('img');
        images.forEach(image => {
            image.addEventListener('click', function () {
                const modal = document.createElement('div');
                modal.style.position = 'fixed';
                modal.style.top = '0';
                modal.style.left = '0';
                modal.style.width = '100%';
                modal.style.height = '100%';
                modal.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';
                modal.style.display = 'flex';
                modal.style.alignItems = 'center';
                modal.style.justifyContent = 'center';
                modal.style.zIndex = '1000';

                const modalImage = document.createElement('img');
                modalImage.src = this.src;
                modalImage.style.maxWidth = '90%';
                modalImage.style.maxHeight = '90%';
                modalImage.style.border = '5px solid white';

                modal.appendChild(modalImage);
                document.body.appendChild(modal);

                modal.addEventListener('click', function () {
                    document.body.removeChild(modal);
                });
            });
        });
    });
</script>

